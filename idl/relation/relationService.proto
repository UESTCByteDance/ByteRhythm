syntax = "proto3";
package relationService;
option go_package = "./relationPb";

message User {
  // @inject_tag: json:"id" form:"id"
  int64 id = 1; // 用户id
  // @inject_tag: json:"name" form:"name"
  string name = 2; // 用户名称
  // @inject_tag: json:"follow_count" form:"follow_count"
  int64 follow_count = 3; // 关注总数
  // @inject_tag: json:"follower_count" form:"follower_count"
  int64 follower_count = 4; // 粉丝总数
  // @inject_tag: json:"is_follow" form:"is_follow"
  bool is_follow = 5; // true-已关注，false-未关注
  // @inject_tag: json:"avatar" form:"avatar"
  string avatar = 6; //用户头像
  // @inject_tag: json:"background_image" form:"background_image"
  string background_image = 7; //用户个人页顶部大图
  // @inject_tag: json:"signature" form:"signature"
  string signature = 8; //个人简介
  // @inject_tag: json:"total_favorited" form:"total_favorited"
  int64 total_favorited = 9; //获赞数量
  // @inject_tag: json:"work_count" form:"work_count"
  int64 work_count = 10; //作品数量
  // @inject_tag: json:"favorite_count" form:"favorite_count"
  int64 favorite_count = 11; //点赞数量
}

message RelationActionRequest {
  // @inject_tag: json:"token" form:"token"
  string token = 1; // 用户鉴权token
  // @inject_tag: json:"to_user_id" form:"to_user_id"
  int64 to_user_id = 2; // 对方用户id
  // @inject_tag: json:"action_type" form:"action_type"
  int32 action_type = 3; // 1-关注，2-取消关注
}

message RelationActionResponse {
  // @inject_tag: json:"status_code" form:"status_code"
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  // @inject_tag: json:"status_msg" form:"status_msg"
  string status_msg = 2; // 返回状态描述
}

message RelationFollowRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  int64 user_id = 1; // 用户id
  // @inject_tag: json:"token" form:"token"
  string token = 2; // 用户鉴权token
}

message RelationFollowResponse {
  // @inject_tag: json:"status_code" form:"status_code"
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  // @inject_tag: json:"status_msg" form:"status_msg"
  string status_msg = 2; // 返回状态描述
  // @inject_tag: json:"user_list" form:"user_list"
  repeated User user_list = 3; // 用户信息列表
}

message RelationFollowerRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  int64 user_id = 1; // 用户id
  // @inject_tag: json:"token" form:"token"
  string token = 2; // 用户鉴权token
}

message RelationFollowerResponse {
  // @inject_tag: json:"status_code" form:"status_code"
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  // @inject_tag: json:"status_msg" form:"status_msg"
  string status_msg = 2; // 返回状态描述
  // @inject_tag: json:"user_list" form:"user_list"
  repeated User user_list = 3; // 用户列表
}

message RelationFriendRequest {
  // @inject_tag: json:"user_id" form:"user_id"
  int64 user_id = 1; // 用户id
  // @inject_tag: json:"token" form:"token"
  string token = 2; // 用户鉴权token
}

message RelationFriendResponse {
  // @inject_tag: json:"status_code" form:"status_code"
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  // @inject_tag: json:"status_msg" form:"status_msg"
  string status_msg = 2; // 返回状态描述
  // @inject_tag: json:"user_list" form:"user_list"
  repeated User user_list = 3; // 用户列表
}

service RelationService {
  rpc ActionRelation(RelationActionRequest) returns (RelationActionResponse) {}
  rpc ListFollowRelation(RelationFollowRequest) returns (RelationFollowResponse) {}
  rpc ListFollowerRelation(RelationFollowerRequest) returns (RelationFollowerResponse) {}
  rpc ListFriendRelation(RelationFriendRequest) returns (RelationFriendResponse) {}
}

